<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.4.RELEASE</version>
		<relativePath />
	</parent>

	<groupId>dev.go.arquitetura.microservices</groupId>
	<artifactId>arquitetura-microservices</artifactId>
	<version>1.0.0</version>
	<packaging>pom</packaging>

	<modules>
		<module>discovery</module>
		<module>gateway</module>
		<module>auth</module>
		<module>financeiro</module>
		<module>core</module>
		<module>token</module>
	</modules>

	<description>
		Arquitetura referência para microserviços, adota como padrão uma gama de ferramentas DevOps

		Ferramentas utilizadas:

			=> Web (spring mvc + Swagger), Jpa (spring data + bean validations), devtools (hot deploy), MySql, H2

			=> Stack cloud spring (impl netflix oss), Spring Configuration Processor

				Eureka:
					* implementa o design pattern Service Registry
					* Gerencia as instâncias de microserviços
					* Checa saúde e o balanceamento de carga de instâncias da mesma aplicação

				Hystrix:
					* Implementa o design pattern Circuit Breaker
					* Tratamento de requisições para recursos(hosts) indisponíveis
					* Facilita a busca pela resolução de erros ou gargalos da aplicação

				Zuul:
					* Implementa o design pattern Gateway
					* Porta de entrada da aplicação (proxy), irá filtrar todas as requisições e redirecionar para seus devidos microservices
					* Realiza autenticações no servidor de autenticação caso uma rota seja segura

				Ribbon:
					* Load balancer

			=> Controle de sessão de autenticação de token's assinados e criptografados
	</description>

	<developers>
		<developer>
			<name>marcos olavo</name>
			<email>marcos.after@gmail.com</email>
		</developer>
	</developers>

	<properties>
		<swagger.version>2.9.2</swagger.version>
		<nimbus-jose.version>7.9</nimbus-jose.version>
		<commons-lang3.version>3.8.1</commons-lang3.version>
		<spring-cloud.version>Greenwich.RELEASE</spring-cloud.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${swagger.version}</version>
		</dependency>

		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${swagger.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>

		<dependency>
			<groupId>com.nimbusds</groupId>
			<artifactId>nimbus-jose-jwt</artifactId>
			<version>${nimbus-jose.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<repositories>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
		</repository>
	</repositories>
</project>